# MPContainer frontend haproxy.cfg
# https://www.haproxy.org/download/2.2/doc/configuration.txt

#
# global config
#

global
    maxconn 600
    quiet
    log stdout format raw local0
    stats socket /tmp/hapstat.socket mode 440
    #stats timeout 2m
    #chroot /var/lib/haproxy
    #user haproxy
    #group haproxy
    lua-load /usr/local/bin/start.lua
    lua-load /usr/local/bin/hello.lua
    #
    # set env vars if these are NOT set already
    presetenv HAPX_US_USER dj
    presetenv HAPX_US_PASS leftthedefault0

defaults
    mode http
    option httplog
    log global
    timeout connect 10s
    timeout client 30s
    timeout server 30s
    maxconn 500

listen stats
    bind 127.0.0.1:8404
    stats enable
    #stats hide-version
    stats uri /hastats/
    stats refresh 60s

# Authentication
userlist AuthBasicUsers
    user "${HAPX_US_USER}" insecure-password "${HAPX_US_PASS}"


#
# front listener
#

frontend balancer
    bind 0.0.0.0:3001
    bind :::3001
    mode http
    http-request deny if HTTP_1.0
    # blocks
    # let haproxy access /ping/ on default backend
    acl network_local src 127.0.0.1
    acl restrict_ping path_beg /ping/stat
    use_backend http_trap if restrict_ping !network_local
    #
    # Container: MPD stream
    acl url_stream path_beg /mpd/
    use_backend http_stream1 if url_stream
    #
    # Container: PyApp
    acl url_pyapp path_beg /pyapp/
    use_backend http_mpcpyapp1 if url_pyapp
    #
    # Container: AdminShell
    acl auth_ok http_auth(AuthBasicUsers)
    acl url_djshell path_beg /admin/shell
    http-request auth realm DJ-shell if url_djshell !auth_ok
    use_backend http_admin if url_djshell auth_ok
    #
    # Container: haproxy
    use_backend http_hastat if { path_beg /hastats/ }
    # lua hello
    http-request use-service lua.lua_server if { path_beg /lua/hi }
    # tarpit
    use_backend http_trap if { path /admin/ }
    use_backend http_trap if { path /shell/ }
    use_backend http_trap if { path /login/ }
    use_backend http_trap if { path /tarpit/ }
    #
    # Container: nginx web (default)
    default_backend http_static1


#
# backends
#

# haproxy statistics
backend http_hastat
    mode http
    option forwardfor
    balance roundrobin
    server http_hastat 127.0.0.1:8404 maxconn 400

# default static webserver
backend http_nginx
    mode http
    option forwardfor
    balance roundrobin
    option httpchk http://backendweb:8880/ping/stat
    http-check expect status 200
    http-request add-header X-Forwarded-For %[src]
    http-response set-header X-Clacks-Overhead "GNU Terry Pratchett"
    server backendweb backendweb:8880 check maxconn 400

# web-shell admin console
backend http_admin
    mode http
    option forwardfor
    balance roundrobin
    server adminmmpd adminmmpd:7681/admin/shell check maxconn 10

# MPD stream
backend http_mpd
    mode http
    option forwardfor
    balance roundrobin
    server backendmpd backendmpd:3123 maxconn 400

# Pyapp flask API
backend http_mpcpyapp
    mode http
    option forwardfor
    balance roundrobin
    http-request set-path "%[path,regsub(^/pyapp/,/)]"
    http-request add-header X-Forwarded-For %[src]
    server pyapp pyapp:8888 maxconn 400

# trap
# note: tarpit responses in haproxy return a http 500 on purpose
backend http_trap
    mode http
    timeout tarpit 60s
    timeout tunnel 30m
    http-request tarpit
